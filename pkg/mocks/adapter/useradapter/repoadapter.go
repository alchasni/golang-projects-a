// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/adityarev/go-be-starter-2/pkg/core/adapter/useradapter (interfaces: RepoAdapter)

// Package mock_useradapter is a generated GoMock package.
package mock_useradapter

import (
	context "context"
	useradapter "twatter/pkg/core/adapter/useradapter"
	domain "twatter/pkg/core/domain"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRepoAdapter is a mock of RepoAdapter interface
type MockRepoAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockRepoAdapterMockRecorder
}

// MockRepoAdapterMockRecorder is the mock recorder for MockRepoAdapter
type MockRepoAdapterMockRecorder struct {
	mock *MockRepoAdapter
}

// NewMockRepoAdapter creates a new mock instance
func NewMockRepoAdapter(ctrl *gomock.Controller) *MockRepoAdapter {
	mock := &MockRepoAdapter{ctrl: ctrl}
	mock.recorder = &MockRepoAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepoAdapter) EXPECT() *MockRepoAdapterMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockRepoAdapter) Create(arg0 context.Context, arg1 useradapter.RepoCreate) (domain.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(domain.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockRepoAdapterMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockRepoAdapter)(nil).Create), arg0, arg1)
}

// Delete mocks base method
func (m *MockRepoAdapter) Delete(arg0 context.Context, arg1 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockRepoAdapterMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockRepoAdapter)(nil).Delete), arg0, arg1)
}

// Find mocks base method
func (m *MockRepoAdapter) Find(arg0 context.Context, arg1 uint64) (domain.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", arg0, arg1)
	ret0, _ := ret[0].(domain.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Find indicates an expected call of Find
func (mr *MockRepoAdapterMockRecorder) Find(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockRepoAdapter)(nil).Find), arg0, arg1)
}

// GetList mocks base method
func (m *MockRepoAdapter) GetList(arg0 context.Context, arg1 useradapter.RepoFilter) (domain.Users, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetList", arg0, arg1)
	ret0, _ := ret[0].(domain.Users)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetList indicates an expected call of GetList
func (mr *MockRepoAdapterMockRecorder) GetList(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetList", reflect.TypeOf((*MockRepoAdapter)(nil).GetList), arg0, arg1)
}

// Update mocks base method
func (m *MockRepoAdapter) Update(arg0 context.Context, arg1 uint64, arg2 useradapter.RepoUpdate) (domain.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1, arg2)
	ret0, _ := ret[0].(domain.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update
func (mr *MockRepoAdapterMockRecorder) Update(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockRepoAdapter)(nil).Update), arg0, arg1, arg2)
}

// UpdatePassword mocks base method
func (m *MockRepoAdapter) UpdatePassword(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdatePassword", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdatePassword indicates an expected call of UpdatePassword
func (mr *MockRepoAdapterMockRecorder) UpdatePassword(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePassword", reflect.TypeOf((*MockRepoAdapter)(nil).UpdatePassword), arg0, arg1, arg2)
}

// Validate mocks base method
func (m *MockRepoAdapter) Validate(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate
func (mr *MockRepoAdapterMockRecorder) Validate(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockRepoAdapter)(nil).Validate), arg0, arg1, arg2)
}
