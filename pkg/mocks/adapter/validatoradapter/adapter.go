// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/adityarev/go-be-starter-2/pkg/core/adapter/validatoradapter (interfaces: Adapter)

// Package mock_validatoradapter is a generated GoMock package.
package mock_validatoradapter

import (
	validatoradapter "twatter/pkg/core/adapter/validatoradapter"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAdapter is a mock of Adapter interface
type MockAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockAdapterMockRecorder
}

// MockAdapterMockRecorder is the mock recorder for MockAdapter
type MockAdapterMockRecorder struct {
	mock *MockAdapter
}

// NewMockAdapter creates a new mock instance
func NewMockAdapter(ctrl *gomock.Controller) *MockAdapter {
	mock := &MockAdapter{ctrl: ctrl}
	mock.recorder = &MockAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAdapter) EXPECT() *MockAdapterMockRecorder {
	return m.recorder
}

// Struct mocks base method
func (m *MockAdapter) Struct(arg0 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Struct", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Struct indicates an expected call of Struct
func (mr *MockAdapterMockRecorder) Struct(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Struct", reflect.TypeOf((*MockAdapter)(nil).Struct), arg0)
}

// Var mocks base method
func (m *MockAdapter) Var(arg0 validatoradapter.Field) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Var", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Var indicates an expected call of Var
func (mr *MockAdapterMockRecorder) Var(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Var", reflect.TypeOf((*MockAdapter)(nil).Var), arg0)
}
